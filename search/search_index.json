{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting started","text":"<p>ShiftUnlocked is a third-person camera module for Roblox Studio, offering high customizability, simple setup, and the versatility to support a wide variety of projects. Fully compatible with Roblox's native features and more, it provides smooth support across mobile, PC, and console platforms. ShiftUnlocked addresses longstanding issues found in the native camera system while faithfully replicating the classic Roblox shift-lock behavior, ensuring a reliable and enhanced user experience.  </p> <p>Features introduced:</p> <ul> <li>Proper collision detection</li> <li>Camera Shake functionality</li> <li>Improved Zoom Control</li> <li>Camera velocity offset option for a more dynamic camera feel</li> <li>Tons of properties for customizing every aspect of the camera</li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#wally","title":"Wally","text":"<p>To set up using Wally, use the following to get the latest version: <pre><code>shiftunlocked = \"yiannis123git/shiftunlocked@*\"\n</code></pre></p>"},{"location":"#manual","title":"Manual","text":"<p>Download <code>ShiftUnlocked.rbxm</code> from the latest release and drag and drop the file into Roblox Studio.</p>"},{"location":"CameraGlobalSettings/","title":"Global Settings","text":"<p>These settings don't just affect individual camera instances; they affect the module as a whole.</p>"},{"location":"CameraGlobalSettings/#gcwarn","title":"GCWarn","text":"<p>shiftUnlocked.GCWarn: boolean </p> <p>Whether the module should issue a warning when there is more than one camera instance in your game.</p>"},{"location":"CameraGlobalSettings/#globalraycastchannelname","title":"GlobalRaycastChannelName","text":"<p>shiftUnlocked.GlobalRaycastChannelName: string</p> <p>The name of the SmartRaycast Channel to be used as a fallback if a camera's channel is not set.</p>"},{"location":"CameraGlobalSettings/#autoexcludechars","title":"AutoExcludeChars","text":"<p>shiftUnlocked.AutoExcludeChars: boolean </p> <p>Whether or not the module should handle the exclusion of player characters from camera collision detection by adding them to the raycast Channel's filter list. If you are using an include filter list for your channel, this feature will be disabled.</p>"},{"location":"CameraGlobalSettings/#camerashakedefaultposinfluence","title":"CameraShakeDefaultPosInfluence","text":"<p>shiftUnlocked.CameraShakeDefaultPosInfluence: Vector3</p> <p>The <code>PositionInfluence</code> vector is used as a fallback when the <code>PositionInfluence</code> argument of the <code>:Shake</code> camera method is <code>nil</code>.</p>"},{"location":"CameraGlobalSettings/#camerashakedefaultrotinfluence","title":"CameraShakeDefaultRotInfluence","text":"<p>shiftUnlocked.CameraShakeDefaultRotInfluence: Vector3</p> <p>The <code>RotationInfluence</code> vector is used as a fallback when the <code>RotationInfluence</code> argument of the <code>:Shake</code> camera method is <code>nil</code>.</p>"},{"location":"CameraGlobalSettings/#camerashakeinstance","title":"CameraShakeInstance","text":"<p>shiftUnlocked.CameraShakeInstance: table</p> <p>This setting just points to the CameraShakeInstance module for easy use.</p> <p>Warning</p> <p>This setting is not intended to be modified.</p>"},{"location":"CameraGlobalSettings/#camerashakepresets","title":"CameraShakePresets","text":"<p>shiftUnlocked.CameraShakePresets: table</p> <p>This setting just points to the CameraShakePresets module for easy use.</p> <p>Warning</p> <p>This setting is not intended to be modified.  </p>"},{"location":"CameraMethods/","title":"Camera Methods","text":"<p>Warning</p> <p>Any method that starts with the character <code>_</code> is not meant to be called. </p>"},{"location":"CameraMethods/#new","title":"new","text":"<p>Camera.new(): SUCamera </p> <p>Creates a new camera instance.</p>"},{"location":"CameraMethods/#setenabled","title":"SetEnabled","text":"<p>Camera:SetEnabled(Enabled: boolean) </p> <p>Enables or disables the camera based on the passed value: <code>true</code> to enable and <code>false</code> to disable the camera.    </p>"},{"location":"CameraMethods/#destroy","title":"Destroy","text":"<p>Camera:Destroy() </p> <p>Cleans up references and connections established by the module. Once the destroy method is invoked on a camera, that camera should never be used again.</p>"},{"location":"CameraMethods/#shakewithinstance","title":"ShakeWithInstance","text":"<p>Camera:ShakeWithInstance(CShakeInstance:  CameraShakeInstance , Sustain: boolean) </p> <p>Shake the camera by providing a CameraShakeInstance. You can create a CameraShakeInstance through the CameraShakeInstance's  <code>.new()</code> constructor or by using one of the presets.  The <code>Sustain</code> parameter determines if the camera shake should be sustained or not.</p> <pre><code>local NewCameraShakeInstance = ShiftUnlockedModule.CameraShakeInstance.new(5, 5, 0.2, 1.5)\nlocal PresetCameraShakeInstance = ShiftUnlockedModule.CameraShakePresets.Explosion\n\n-- One time explosion\n\nShiftUnlockedCamera:ShakeWithInstance(PresetCameraShakeInstance, false)\n\n-- Sustained custom shake \n\nShiftUnlockedCamera:ShakeWithInstance(NewCameraShakeInstance, true)\n</code></pre>"},{"location":"CameraMethods/#shake","title":"Shake","text":"<p>Camera:Shake(Magnitude: number, Roughness: number, Sustain: boolean?,  FadeInTime: number?, FadeOutTime: number?, PositionInfluence: Vector3?, RotationInfluence: Vector3?) </p> <p>Shake the camera by passing the properties of a CameraShakeInstance as arguments directly to the <code>:Shake</code> method, without the need to provide a predefined CameraShakeInstance. This is particularly useful in scenarios where a preconfigured shake is not applicable.</p>"},{"location":"CameraProperties/","title":"Camera Properties","text":"<p>All of these properties can be set during runtime, although some properties should only be set when the camera is disabled to ensure the best user experience.   </p> <p>While there are some guardrails in place to prevent you from messing up setting up the camera properties, the module asumes you are passing correct value types.</p> <p>Warning</p> <p>Any property that starts with the character <code>_</code> is not meant to be changed. </p>"},{"location":"CameraProperties/#cameraoffset","title":"CameraOffset","text":"<p>Camera.CameraOffset: Vector3 </p> <p>The offset of the camera from our player's character, more specifically the offset from our player's character's humanoid root part, defaults to the legacy value of Roblox's native shift lock.</p>"},{"location":"CameraProperties/#fov","title":"FOV","text":"<p>Camera.FOV: number </p> <p>The camera's field of view can be set to any number between 0 and 120.</p>"},{"location":"CameraProperties/#pitchlimit","title":"PitchLimit","text":"<p>Camera.PitchLimit: number </p> <p>The maximum degrees to which the camera can be angled up and down. This value can be set to any number between 1 and 89.9.</p>"},{"location":"CameraProperties/#lockedicon","title":"LockedIcon","text":"<p>Camera.LockedIcon: string </p> <p>The icon will be displayed when the MouseLocked property is set to true. Setting this to nil disables the icon functionality on mobile and consoles.</p>"},{"location":"CameraProperties/#unlockedicon","title":"UnlockedIcon","text":"<p>Camera.UnlockedIcon: string </p> <p>The icon will be displayed when the MouseLocked property is set to false. This functionality is only available on PC.</p>"},{"location":"CameraProperties/#mouselocked","title":"MouseLocked","text":"<p>Camera.MouseLocked: boolean </p> <p>Regardless of the variable's name, it affects the camera across all platforms. Setting this value to false will unlock the mouse and set the camera to a static state, where no inputs will be accepted. This value is intended for scenarios where the player needs to interact with some form of UI, such as an inventory menu.</p>"},{"location":"CameraProperties/#zoomlocked","title":"ZoomLocked","text":"<p>Camera.ZoomLocked: boolean </p> <p>Determines whether the player can control the camera's zoom functionality.   </p>"},{"location":"CameraProperties/#maxzoom","title":"MaxZoom","text":"<p>Camera.MaxZoom: number </p> <p>The maximum distance the camera can zoom away from its subject.</p>"},{"location":"CameraProperties/#minzoom","title":"MinZoom","text":"<p>Camera.MinZoom: number </p> <p>The minimum distance the camera can zoom away from its subject.</p>"},{"location":"CameraProperties/#startzoom","title":"StartZoom","text":"<p>Camera.StartZoom: number </p> <p>The camera will always start from this value when it is enabled. This value must be between the minimum and maximum zoom values.</p>"},{"location":"CameraProperties/#zoomstiffness","title":"ZoomStiffness","text":"<p>Camera.ZoomStiffness: number </p> <p>Controls the speed of the camera zoom functionality as it adjusts to the desired zoom level.</p>"},{"location":"CameraProperties/#zoomspeedmouse","title":"ZoomSpeedMouse","text":"<p>Camera.ZoomSpeedMouse: number </p> <p>Controls the speed at which the desired zoom level is adjusted in response to mouse wheel inputs. The default value aligns with Roblox's default behavior.</p>"},{"location":"CameraProperties/#zoomspeedkeyboard","title":"ZoomSpeedKeyboard","text":"<p>Camera.ZoomSpeedKeyboard: number </p> <p>Controls the speed at which the desired zoom level is adjusted in response to keyboard inputs. The default value aligns with Roblox's default behavior.</p>"},{"location":"CameraProperties/#zoomspeedtouch","title":"ZoomSpeedTouch","text":"<p>Camera.ZoomSpeedTouch: number </p> <p>Controls the speed at which the desired zoom level is adjusted in response to touch inputs. The default value aligns with Roblox's default behavior.</p>"},{"location":"CameraProperties/#zoomsensitivitycurvature","title":"ZoomSensitivityCurvature","text":"<p>Camera.ZoomSensitivityCurvature: number </p> <p>Determines how the zoom level changes in response to user input, making the zoom speed non-linear and dependent on the current zoom level.</p>"},{"location":"CameraProperties/#zoomcontrollerkey","title":"ZoomControllerKey","text":"<p>Camera.ZoomControllerKey: Enum.KeyCode | nil </p> <p>The key responsible for zooming in and out on a gamepad. Setting this to <code>nil</code> will disable the zoom functionality on the gamepad.</p>"},{"location":"CameraProperties/#zoominkeyboardkey","title":"ZoomInKeyboardKey","text":"<p>Camera.ZoomInKeyboardKey: Enum.KeyCode | nil </p> <p>The key responsible for zooming in on keyboard. Setting this to <code>nil</code> will disable the zoom in functionality on keyboard.</p>"},{"location":"CameraProperties/#zoomoutkeyboardkey","title":"ZoomOutKeyboardKey","text":"<p>Camera.ZoomOutKeyboardKey: Enum.KeyCode | nil </p> <p>The key responsible for zooming out on keyboard. Setting this to <code>nil</code> will disable the zoom out functionality on keyboard.</p>"},{"location":"CameraProperties/#mouseradsperpixel","title":"MouseRadsPerPixel","text":"<p>Camera.MouseRadsPerPixel: Vector2 </p> <p>Affects the sensitivity of mouse camera movement inputs.</p>"},{"location":"CameraProperties/#gamepadsensitivitymodifier","title":"GamepadSensitivityModifier","text":"<p>Camera.GamepadSensitivityModifier: Vector2 </p> <p>Affects the sensitivity of gamepad camera movement inputs.    </p>"},{"location":"CameraProperties/#touchsensitivitymodifier","title":"TouchSensitivityModifier","text":"<p>Camera.TouchSensitivityModifier: Vector2 </p> <p>Affects the sensitivity of touch camera movement inputs.    </p>"},{"location":"CameraProperties/#gamepadlowerkvalue","title":"GamepadLowerKValue","text":"<p>Camera.GamepadLowerKValue: number </p> <p>Controls the thumbstick input sensitivity for negative inputs: lower values result in more responsive extremes, while higher values provide smoother, more linear control.</p>"},{"location":"CameraProperties/#gamepadkvalue","title":"GamepadKValue","text":"<p>Camera.GamepadKValue: number </p> <p>Controls the thumbstick input sensitivity for positive inputs: lower values result in more responsive extremes, while higher values provide smoother, more linear control.</p>"},{"location":"CameraProperties/#gamepaddeadzone","title":"GamepadDeadzone","text":"<p>Camera.GamepadDeadzone: number </p> <p>This specifies the range of gamepad input values near 0 that will be mapped to an output of 0 to prevent unintentional inputs.</p>"},{"location":"CameraProperties/#raycastchannel","title":"RaycastChannel","text":"<p>Camera.RaycastChannel: Channel | nil </p> <p>The Channel that will be used for that camera's raycast operations. For more information, please visit SmartRaycast's documentation page.</p>"},{"location":"CameraProperties/#obstructionrange","title":"ObstructionRange","text":"<p>Camera.ObstructionRange: number </p> <p>If the camera moves closer to the player's character than this range, the character will start to become transparent for better camera visibility.</p>"},{"location":"CameraProperties/#rotatecharacter","title":"RotateCharacter","text":"<p>Camera.RotateCharacter: boolean </p> <p>Sets whether or not the Humanoid will automatically rotate to face in the direction the camera is looking.</p>"},{"location":"CameraProperties/#correctionreversion","title":"CorrectionReversion","text":"<p>Camera.CorrectionReversion: boolean </p> <p>Whether or not camera collision corrections will be reverted gradually or instantly.</p>"},{"location":"CameraProperties/#correctionreversionspeed","title":"CorrectionReversionSpeed","text":"<p>Camera.CorrectionReversionSpeed: number </p> <p>The speed at which the camera's collision correction is reverted. This value is scaled based on the current camera offset.</p>"},{"location":"CameraProperties/#timeuntilcorrectionreversion","title":"TimeUntilCorrectionReversion","text":"<p>Camera.TimeUntilCorrectionReversion: number </p> <p>The time required for the camera correction reversal process to commence after collision corrections are no longer applied to the camera. Corrections to the camera's zoom will revert slightly more quickly than other types of corrections. This process is executed on a per-axis basis.</p>"},{"location":"CameraProperties/#velocityoffset","title":"VelocityOffset","text":"<p>Camera.VelocityOffset: boolean</p> <p>Determines whether the camera will \"lag behind\" at certain velocity speeds to make the camera movement feel more dynamic.</p>"},{"location":"CameraProperties/#allowvelocityoffsetonteleport","title":"AllowVelocityOffsetOnTeleport","text":"<p>Camera.AllowVelocityOffsetOnTeleport: boolean</p> <p>Whether or not the camera should treat the player's character teleportation as regular motion. The module tries its best to detect when teleportation occurs, but the ideal way to handle spikes in velocity due to teleportation is to manually set VelocityOffset to true or false accordingly during runtime, based on whether a teleport is about to be performed on the player's character. If you are planning to introduce your own logic to detect teleportation, then you should set this property to true.</p>"},{"location":"CameraProperties/#velocityoffsetvelocitythreshold","title":"VelocityOffsetVelocityThreshold","text":"<p>Camera.VelocityOffsetVelocityThreshold: number </p> <p>The minimum camera movement velocity required to start applying the velocity offset.   </p>"},{"location":"CameraProperties/#velocityoffsetfrequency","title":"VelocityOffsetFrequency","text":"<p>Camera.VelocityOffsetFrequency: number </p> <p>Governs the rate at which the camera's offset adjusts to match the current velocity.</p>"},{"location":"CameraProperties/#velocityoffsetdamping","title":"VelocityOffsetDamping","text":"<p>Camera.VelocityOffsetDamping: number </p> <p>The amplitude of oscillations as the velocity offset reaches its target.</p>"},{"location":"Setup/","title":"Setting up the camera in your project","text":""},{"location":"Setup/#creating-a-new-camera-object","title":"Creating a new camera object","text":"<p>Creating a new camera object is straightforward. Simply require the ShiftUnlocked module and use the .new() function.</p> <pre><code>-- First lets require our module by doing the folowing\n\nlocal ShiftUnlockedModule = require(PathToOurModule.shiftunlocked)\n\n-- Now we can create a camera object \n\nlocal ShiftUnlockedCamera = ShiftUnlocked.new()\n</code></pre>"},{"location":"Setup/#adjusting-the-camera","title":"Adjusting the camera","text":"<p>It is good practice to set up the camera properties to suit our needs before we actually enable the camera. The camera will work fine without any setup, but it is recommended to make some adjustments before enabling the camera. For a full list of the adjustments that can be made, refer to the camera's properties.</p> <p>Making adjustments is easy; we can set the properties of the camera to meet our project's needs. </p> <pre><code>-- Let's adjust the camera's maximum zoom value, as the default value is a bit too large\n\nShiftUnlockedCamera.MaxZoom = 100 \n\n-- Actually, let's just disable the zoom functionality completely\n\nShiftUnlockedCamera.ZoomLocked = true \n</code></pre>"},{"location":"Setup/#changing-the-raycastchannel","title":"Changing the RaycastChannel","text":"<p>A beneficial adjustment to consider is modifying the camera's raycast Channel. This is because ShiftUnlocked is quite strict with its collision detection to ensure an immersive environment. However, camera clipping through an object is not always a bad thing. At times, small or insignificant objects like a mug on a coffee table or a street lamp could be ignored to improve user experience. </p> <p>The easiest way to achieve this is by using a plugin like Tag Editor, which can enable you to tag objects you want to ignore with the Collection Service. (You don't have to manually tag each object.)</p> <p>After we have tagged our objects using the collection service, we can proceed with the following steps through code:</p> <pre><code>local SmartRaycast = require(PathToOurModule.smartraycast)\n\nlocal OurChannel = SmartRaycast.CreateChannel(\n    \"ShiftUnlocked\",\n    {\"OurCollectionServiceTag\"},\n    nil,\n    nil,\n    Enum.RaycastFilterType.Exclude, \n    -- ...\n)\n\nShiftUnlockedCamera.RaycastChannel = OurChannel\n</code></pre> <p>This a simple implementation, you can introduce more paramaters for your Channel as needed.</p>"},{"location":"UsingTheCamera/","title":"Using the camera","text":""},{"location":"UsingTheCamera/#enabling-and-disabling-the-camera","title":"Enabling and disabling the camera","text":"<p>After we have finished adjusting our camera, we can enable it by doing the following.</p> <pre><code>ShiftUnlockedCamera:SetEnabled(true)\n</code></pre> <p>To disable the camera, simply pass false as the value.</p> <pre><code>ShiftUnlockedCamera:SetEnabled(false)\n</code></pre>"},{"location":"UsingTheCamera/#destroying-the-camera","title":"Destroying the camera","text":"<p>After we finish using a camera object, we can destroy it to free up memory by doing the following.</p> <pre><code>ShiftUnlockedCamera:Destroy()\n</code></pre>"}]}